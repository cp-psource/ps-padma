<?php
// Redirect to WordPress media library with Thickbox
wp_redirect(admin_url('media-upload.php?type=image&TB_iframe=true'));
exit;
?>

$GLOBALS['wp_media_view_strings'] = array();
$GLOBALS['wp_media_view_settings'] = array();

/* Begin kludge to fix issue with WP string localize in some cases.  See: https://core.trac.wordpress.org/ticket/24724 */
function padma_media_view_settings_grabber( $settings ) {

	$GLOBALS['wp_media_view_settings'] = $settings;

	return $settings;

}
add_filter( 'media_view_settings', 'padma_media_view_settings_grabber' );


function padma_media_view_strings_grabber($strings) {

	$strings['attachmentsList'] = '';
	$GLOBALS['wp_media_view_strings'] = $strings;

	return $strings;

}
add_filter('media_view_strings', 'padma_media_view_strings_grabber');

wp_enqueue_media();

// Force enqueue media scripts
wp_enqueue_script('media-upload');
wp_enqueue_script('media-views');
wp_enqueue_script('media-editor');
wp_enqueue_script('media-audiovideo');
wp_enqueue_script('media-models');
wp_enqueue_script('media-grid');

$GLOBALS['wp_media_view_strings']['settings'] = $GLOBALS['wp_media_view_settings'];

//wp_enqueue_script( 'media-editor', padma_url() . '/library/visual-editor/scripts-src/deps/media-editor.js', array( 'jquery' ) );
wp_localize_script( 'media-editor', '_wpMediaViewsL10n', $GLOBALS['wp_media_view_strings'] );

//wp_register_script( 'media-views', padma_url() . '/library/visual-editor/scripts-src/deps/media-views.js' );
wp_localize_script( 'media-views', '_wpMediaViewsL10n', $GLOBALS['wp_media_view_strings'] );
/* End Kludge */

wp_enqueue_style('open-sans');

// Ensure jQuery is loaded
wp_enqueue_script('jquery');

wp_print_styles();
wp_print_scripts();
?>

<script type="text/javascript">
// Force initialize wp.media if it's not available
if (typeof wp !== 'undefined' && typeof wp.media === 'undefined') {
    // Try to initialize wp.media manually
    wp.media = wp.media || {};
    
    // Load media frame templates
    if (typeof _wpMediaViewsL10n !== 'undefined') {
        wp.media.view = wp.media.view || {};
        wp.media.controller = wp.media.controller || {};
        wp.media.model = wp.media.model || {};
    }
}
</script>

<style type="text/css">
	.media-modal {
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}

	.media-modal-close {
		display: none;
	}

	.media-frame-router {
		top: 5px;
	}

	.media-frame-content {
		top: 39px;
	}
	.media-frame-actions-heading{
		display: none;
	}
	h2.media-attachments-filter-heading{}
	label[for='media-attachment-date-filters']{
		float: left;
	    padding: 0;
	    margin-top: 25px;
	}
	#media-attachment-date-filters{
		float: left;
	    margin-top: 15px;
	    margin-left: 10px;
	}
</style>

</head>
<body>
<?php
// Redirect to WordPress upload.php if we can't use the media API
if (!current_user_can('upload_files')) {
    wp_die('You do not have permission to upload files.');
}

// Use WordPress admin upload page as fallback
$upload_url = admin_url('upload.php?mode=grid');
wp_redirect($upload_url);
exit;
?>

<script type="text/javascript">
// This shouldn't be reached, but keep as fallback
jQuery(document).ready(function($) {
    console.log('Redirecting to WordPress media library...');
});
</script>

</body>
</html>